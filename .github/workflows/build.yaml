name: CI Pipeline

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.22.6-alpine
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Extract Tag
        id: extract_tag
        run: echo "RELEASE_TAG=${GITHUB_REF_NAME:-dev}" >> $GITHUB_ENV
      - name: Install dependencies
        run: apk add -U curl zip gettext
      - name: Install Task
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
      - name: "Printenv"
        run: printenv
      - name: Run Task
        run: task clean bundle
      - name: Test Binary
        run: bin/kubectl-encrypted-kubeconfig-linux-amd64 version
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: |
            bundle/*.zip
            bundle/*.tar.gz
            bundle/*.yaml
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Extract Tag
        id: extract_tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bundle
          path: bundle
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bundle/encrypted-kubeconfig-windows-amd64.zip
          asset_name: encrypted-kubeconfig-windows-amd64.zip
          asset_content_type: application/zip
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bundle/encrypted-kubeconfig-darwin-arm64.tar.gz
          asset_name: encrypted-kubeconfig-darwin-arm64.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bundle/encrypted-kubeconfig-linux-amd64.tar.gz
          asset_name: encrypted-kubeconfig-linux-amd64.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bundle/encrypted-kubeconfig.yaml
          asset_name: encrypted-kubeconfig.yaml
          asset_content_type: application/x-yaml
